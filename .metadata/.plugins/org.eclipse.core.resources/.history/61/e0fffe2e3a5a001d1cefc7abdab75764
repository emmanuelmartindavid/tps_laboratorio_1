#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "jugador.h"
Jugador* jug_new()
{				//Pide memoria dinC!mica e inicializa los datos
	Jugador *nuevoJugador = NULL;
	newPlayer = (Jugador*) malloc(sizeof(Jugador));

	if (newPlayer != NULL)
	{
		nuevoJugador->id = 0;
		strcpy(nuevoJugador->nombreCompleto, " ");
		nuevoJugador->edad = 0;
		strcpy(nuevoJugador->posicion, " ");
		strcpy(nuevoJugador->nacionalidad, " ");
		nuevoJugador->idSeleccion = 0;
		nuevoJugador->isEmpty = 0;

	}

	return newPlayer;

}

Jugador* jug_newParametros(char* idStr,char* nombreCompletoStr,char* edadStr, char* posicionStr, char* nacionalidadStr, char* idSelccionStr)
{
	//Antes de cargar deben validarse los datos
	Jugador *nuevoJugador = nuevoJugador();

	if (newPlayer != NULL)
	{
		if (!(jug_setId(nuevoJugador, atoi(idStr))
			&& jug_setNombreCompleto(nuevoJugador, nombreCompletoStr)
			&& jug_setEdad(nuevoJugador, atoi(edadStr))
			&& jug_setPosicion(nuevoJugador, posicionStr)
			&& setNationalityPlayer(nuevoJugador, nacionalidadStr)
			&& setNationalityPlayer(nuevoJugador, atoi(idSelccionStr))))
		{
			deletePlayer(nuevoJugador);
			nuevoJugador = NULL;	//INDICA FUNCION NO ANDUVO BIEN.
		}
	}

	return nuevoJugador;

}

void jug_delete(Jugador *this)
{

	free(this);

}

int jug_setId(Jugador* this,int id)
{

	int returnSetIdPlayer = ERROR;

	if (this != NULL && id > 0)
	{
		this->id = id;
		returnSetIdPlayer = SUCCESS;
	}

	return returnSetIdPlayer;
}

int jug_getId(Jugador* this,int* id)
{

	int returnGetIdPlayer = ERROR;

	if (this != NULL && id != NULL)
	{
		*id = this->id;
		returnGetIdPlayer = SUCCESS;
	}

	return returnGetIdPlayer;
}

int jug_setNombreCompleto(Jugador* this,char* nombreCompleto)
{

	int returnSetName = ERROR;

	if (this != NULL && nombreCompleto != NULL)
	{
		strcpy(this->nombreCompleto, nombreCompleto);
		returnSetName = SUCCESS;
	}

	return returnSetName;
}

int jug_getNombreCompleto(Jugador* this,char* nombreCompleto)
{

	int returnGetName = ERROR;

	if (this != NULL && nombreCompleto != NULL)
	{
		strcpy(nombreCompleto, this->nombreCompleto);
		returnGetName = SUCCESS;
	}

	return returnGetName;
}

int jug_setEdad(Jugador* this,int edad)
{
	int returnSetHiringYears = ERROR;

	if (this != NULL && edad > 0)
	{
		this->edad = edad;
		returnSetHiringYears = SUCCESS;
	}

	return returnSetHiringYears;
}

int jug_getEdad(Jugador* this,int* edad)
{
	int returnGetHiringYears = ERROR;

	if (this != NULL && edad != NULL)
	{
		*edad = this->edad;
		returnGetHiringYears = SUCCESS;
	}

	return returnGetHiringYears;
}

int jug_setPosicion(Jugador* this,char* posicion)
{

	int returnSetPostion = ERROR;

	if (this != NULL && posicion != NULL)
	{
		strcpy(this->posicion, posicion);
		returnSetPostion = SUCCESS;
	}

	return returnSetPostion;
}

int jug_getPosicion(Jugador* this,char* posicion)
{

	int returnGetPostion = ERROR;

	if (this != NULL && posicion != NULL)
	{
		strcpy(posicion, this->posicion);
		returnGetPostion = SUCCESS;
	}

	return returnGetPostion;
}

int jug_setNacionalidad(Jugador* this,char* nacionalidad)
{

	int returnSetPostion = ERROR;

	if (this != NULL && nacionalidad != NULL)
	{
		strcpy(this->nacionalidad, nacionalidad);
		returnSetPostion = SUCCESS;
	}

	return returnSetPostion;
}

int jug_getNacionalidad(Jugador* this,char* nacionalidad)
{

	int returnGetPostion = ERROR;

	if (this != NULL && nacionalidad != NULL)
	{
		strcpy(nacionalidad, this->nacionalidad);
		returnGetPostion = SUCCESS;
	}

	return returnGetPostion;
}

int jug_setIdSeleccion(Jugador* this,int idSeleccion)
{
	int returnSetShirtNumber = ERROR;

	if (this != NULL && idSeleccion > 0)
	{
		this->idSeleccion = idSeleccion;
		returnSetShirtNumber = SUCCESS;
	}

	return returnSetShirtNumber;
}

int getIdNationalTeamPLayer(sPlayer *this, int *idNationalTeam)
{
	int returnGetShirtNumber = ERROR;

	if (this != NULL && idNationalTeam != NULL)
	{
		*idNationalTeam = this->idNationalTeam;
		returnGetShirtNumber = SUCCESS;
	}

	return returnGetShirtNumber;
}

int setIsEmptyPlayer(sPlayer *this, int isEmpty)
{
	int returnSetConfederationId = ERROR;

	if (this != NULL)
	{
		this->isEmpty = isEmpty;
		returnSetConfederationId = SUCCESS;
	}

	return returnSetConfederationId;
}

int getIsEmptyPlayer(sPlayer *this, int *isEmpty)
{
	int returnGetConfederationId = ERROR;

	if (this != NULL && isEmpty != NULL)
	{
		*isEmpty = this->isEmpty;
		returnGetConfederationId = SUCCESS;
	}

	return returnGetConfederationId;
}

