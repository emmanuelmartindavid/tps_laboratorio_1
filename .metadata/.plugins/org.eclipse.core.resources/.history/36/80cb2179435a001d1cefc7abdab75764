#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "jugador.h"
Jugador* jug_new()
{				//Pide memoria dinC!mica e inicializa los datos
	Jugador *nuevoJugador = NULL;
	nuevoJugador = (Jugador*) malloc(sizeof(Jugador));

	if (nuevoJugador != NULL)
	{
		nuevoJugador->id = 0;
		strcpy(nuevoJugador->nombreCompleto, " ");
		nuevoJugador->edad = 0;
		strcpy(nuevoJugador->posicion, " ");
		strcpy(nuevoJugador->nacionalidad, " ");
		nuevoJugador->idSeleccion = 0;
		nuevoJugador->isEmpty = 0;

	}

	return nuevoJugador;

}

Jugador* jug_newParametros(char *idStr, char *nombreCompletoStr, char *edadStr, char *posicionStr, char *nacionalidadStr, char *idSelccionStr)
{
	//Antes de cargar deben validarse los datos
	Jugador *nuevoJugador = jug_new();

	if (nuevoJugador != NULL)
	{
		if (!(jug_setId(nuevoJugador, atoi(idStr))
					&& jug_setNombreCompleto(nuevoJugador, nombreCompletoStr)
					&& jug_setEdad(nuevoJugador, atoi(edadStr))
					&& jug_setPosicion(nuevoJugador, posicionStr)
					&& setNationalityPlayer(nuevoJugador, nacionalidadStr)
					&& setNationalityPlayer(nuevoJugador, atoi(idSelccionStr))))
		{
			deletePlayer(nuevoJugador);
			nuevoJugador = NULL;	//INDICA FUNCION NO ANDUVO BIEN.
		}
	}

	return nuevoJugador;

}

void jug_delete(Jugador *this)
{

	free(this);

}

int jug_setId(Jugador *this, int id)
{

	int retorno = ERROR;

	if (this != NULL && id > 0)
	{
		this->id = id;
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_getId(Jugador *this, int *id)
{

	int retorno = ERROR;

	if (this != NULL && id != NULL)
	{
		*id = this->id;
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_setNombreCompleto(Jugador *this, char *nombreCompleto)
{

	int retorno = ERROR;

	if (this != NULL && nombreCompleto != NULL)
	{
		strcpy(this->nombreCompleto, nombreCompleto);
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_getNombreCompleto(Jugador *this, char *nombreCompleto)
{

	int retorno = ERROR;

	if (this != NULL && nombreCompleto != NULL)
	{
		strcpy(nombreCompleto, this->nombreCompleto);
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_setEdad(Jugador *this, int edad)
{
	int retorno = ERROR;

	if (this != NULL && edad > 0)
	{
		this->edad = edad;
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_getEdad(Jugador *this, int *edad)
{
	int retorno = ERROR;

	if (this != NULL && edad != NULL)
	{
		*edad = this->edad;
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_setPosicion(Jugador *this, char *posicion)
{

	int retorno = ERROR;

	if (this != NULL && posicion != NULL)
	{
		strcpy(this->posicion, posicion);
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_getPosicion(Jugador *this, char *posicion)
{

	int retorno = ERROR;

	if (this != NULL && posicion != NULL)
	{
		strcpy(posicion, this->posicion);
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_setNacionalidad(Jugador *this, char *nacionalidad)
{

	int retorno = ERROR;

	if (this != NULL && nacionalidad != NULL)
	{
		strcpy(this->nacionalidad, nacionalidad);
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_getNacionalidad(Jugador *this, char *nacionalidad)
{

	int retorno = ERROR;

	if (this != NULL && nacionalidad != NULL)
	{
		strcpy(nacionalidad, this->nacionalidad);
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_setIdSeleccion(Jugador *this, int idSeleccion)
{
	int retorno = ERROR;

	if (this != NULL && idSeleccion > 0)
	{
		this->idSeleccion = idSeleccion;
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_getSIdSeleccion(Jugador *this, int *idSeleccion)
{
	int retorno = ERROR;

	if (this != NULL && idSeleccion != NULL)
	{
		*idSeleccion = this->idSeleccion;
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_setIsEmpty(Jugador *this, int isEmpty)
{
	int retorno = ERROR;

	if (this != NULL)
	{
		this->isEmpty = isEmpty;
		retorno = SUCCESS;
	}

	return retorno;
}

int jug_getIsEmpty(Jugador *this, int *isEmpty)
{
	int retorno = ERROR;

	if (this != NULL && isEmpty != NULL)
	{
		*isEmpty = this->isEmpty;
		retorno = SUCCESS;
	}

	return retorno;
}

